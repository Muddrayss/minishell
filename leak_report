==1026781== Memcheck, a memory error detector
==1026781== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==1026781== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==1026781== Command: ./minishell
==1026781== 
==1026781== Conditional jump or move depends on uninitialised value(s)
==1026781==    at 0x10C14B: fill_redirs (fill_redirs.c:43)
==1026781==    by 0x10BFBF: init_cmd (parser.c:112)
==1026781==    by 0x10BD4F: fill_tree (parser.c:50)
==1026781==    by 0x10BC58: parser (parser.c:29)
==1026781==    by 0x10A701: minishell_loop (minishell.c:45)
==1026781==    by 0x10A61A: main (minishell.c:24)
==1026781==  Uninitialised value was created by a stack allocation
==1026781==    at 0x10BFE1: fill_redirs (fill_redirs.c:19)
==1026781== 
==1026781== Conditional jump or move depends on uninitialised value(s)
==1026781==    at 0x10C151: fill_redirs (fill_redirs.c:43)
==1026781==    by 0x10BFBF: init_cmd (parser.c:112)
==1026781==    by 0x10BD4F: fill_tree (parser.c:50)
==1026781==    by 0x10BC58: parser (parser.c:29)
==1026781==    by 0x10A701: minishell_loop (minishell.c:45)
==1026781==    by 0x10A61A: main (minishell.c:24)
==1026781==  Uninitialised value was created by a stack allocation
==1026781==    at 0x10BFE1: fill_redirs (fill_redirs.c:19)
==1026781== 
exit
==1026781== 
==1026781== HEAP SUMMARY:
==1026781==     in use at exit: 204,772 bytes in 219 blocks
==1026781==   total heap usage: 618 allocs, 399 frees, 244,188 bytes allocated
==1026781== 
==1026781== 4 bytes in 1 blocks are definitely lost in loss record 1 of 62
==1026781==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==1026781==    by 0x1100DE: ft_calloc (ft_calloc.c:23)
==1026781==    by 0x1110D8: calloc_p (alloc.c:33)
==1026781==    by 0x10C35C: get_filename (fill_redirs.c:73)
==1026781==    by 0x10C21C: init_redir (fill_redirs.c:55)
==1026781==    by 0x10C146: fill_redirs (fill_redirs.c:41)
==1026781==    by 0x10BFBF: init_cmd (parser.c:112)
==1026781==    by 0x10BD4F: fill_tree (parser.c:50)
==1026781==    by 0x10BC58: parser (parser.c:29)
==1026781==    by 0x10A701: minishell_loop (minishell.c:45)
==1026781==    by 0x10A61A: main (minishell.c:24)
==1026781== 
==1026781== LEAK SUMMARY:
==1026781==    definitely lost: 4 bytes in 1 blocks
==1026781==    indirectly lost: 0 bytes in 0 blocks
==1026781==      possibly lost: 0 bytes in 0 blocks
==1026781==    still reachable: 0 bytes in 0 blocks
==1026781==         suppressed: 204,768 bytes in 218 blocks
==1026781== 
==1026781== For lists of detected and suppressed errors, rerun with: -s
==1026781== ERROR SUMMARY: 21 errors from 3 contexts (suppressed: 0 from 0)
