==17675== Memcheck, a memory error detector
==17675== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==17675== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==17675== Command: ./minishell
==17675== 
==17675== Invalid write of size 1
==17675==    at 0x10C1EC: remove_chars (parser_redirs.c:121)
==17675==    by 0x10C0A0: clear_redirs (parser_redirs.c:97)
==17675==    by 0x10BC92: init_cmd (parser.c:187)
==17675==    by 0x10BA4C: fill_tree (parser.c:131)
==17675==    by 0x10B712: parser (parser.c:36)
==17675==    by 0x109873: minishell_loop (minishell.c:89)
==17675==    by 0x109616: main (minishell.c:27)
==17675==  Address 0x4b69577 is 5 bytes after a block of size 18 alloc'd
==17675==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==17675==    by 0x10AEB5: malloc_p (protected_methods.c:21)
==17675==    by 0x10C182: remove_chars (parser_redirs.c:115)
==17675==    by 0x10C0A0: clear_redirs (parser_redirs.c:97)
==17675==    by 0x10BC92: init_cmd (parser.c:187)
==17675==    by 0x10BA4C: fill_tree (parser.c:131)
==17675==    by 0x10B712: parser (parser.c:36)
==17675==    by 0x109873: minishell_loop (minishell.c:89)
==17675==    by 0x109616: main (minishell.c:27)
==17675== 
==17675== Conditional jump or move depends on uninitialised value(s)
==17675==    at 0x484ED28: strlen (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==17675==    by 0x4936D30: __vfprintf_internal (vfprintf-internal.c:1517)
==17675==    by 0x492079E: printf (printf.c:33)
==17675==    by 0x10C209: remove_chars (parser_redirs.c:122)
==17675==    by 0x10C0A0: clear_redirs (parser_redirs.c:97)
==17675==    by 0x10BC92: init_cmd (parser.c:187)
==17675==    by 0x10BA4C: fill_tree (parser.c:131)
==17675==    by 0x10B712: parser (parser.c:36)
==17675==    by 0x109873: minishell_loop (minishell.c:89)
==17675==    by 0x109616: main (minishell.c:27)
==17675== 
==17675== Conditional jump or move depends on uninitialised value(s)
==17675==    at 0x10F816: ft_strlen (ft_strlen.c:22)
==17675==    by 0x10F51B: ft_strdup (ft_strdup.c:22)
==17675==    by 0x10BCA9: init_cmd (parser.c:190)
==17675==    by 0x10BA4C: fill_tree (parser.c:131)
==17675==    by 0x10B712: parser (parser.c:36)
==17675==    by 0x109873: minishell_loop (minishell.c:89)
==17675==    by 0x109616: main (minishell.c:27)
==17675== 
==17675== Conditional jump or move depends on uninitialised value(s)
==17675==    at 0x10F579: ft_strdup (ft_strdup.c:26)
==17675==    by 0x10BCA9: init_cmd (parser.c:190)
==17675==    by 0x10BA4C: fill_tree (parser.c:131)
==17675==    by 0x10B712: parser (parser.c:36)
==17675==    by 0x109873: minishell_loop (minishell.c:89)
==17675==    by 0x109616: main (minishell.c:27)
==17675== 
exit
==17675== 
==17675== HEAP SUMMARY:
==17675==     in use at exit: 198,830 bytes in 216 blocks
==17675==   total heap usage: 818 allocs, 602 frees, 270,521 bytes allocated
==17675== 
==17675== 18 bytes in 1 blocks are definitely lost in loss record 7 of 54
==17675==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==17675==    by 0x10AEB5: malloc_p (protected_methods.c:21)
==17675==    by 0x10C182: remove_chars (parser_redirs.c:115)
==17675==    by 0x10C0A0: clear_redirs (parser_redirs.c:97)
==17675==    by 0x10BC92: init_cmd (parser.c:187)
==17675==    by 0x10BA4C: fill_tree (parser.c:131)
==17675==    by 0x10B712: parser (parser.c:36)
==17675==    by 0x109873: minishell_loop (minishell.c:89)
==17675==    by 0x109616: main (minishell.c:27)
==17675== 
==17675== 23 bytes in 1 blocks are definitely lost in loss record 9 of 54
==17675==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==17675==    by 0x10F050: ft_calloc (ft_calloc.c:23)
==17675==    by 0x10AF16: calloc_p (protected_methods.c:33)
==17675==    by 0x10BF2E: clear_redirs (parser_redirs.c:74)
==17675==    by 0x10BC92: init_cmd (parser.c:187)
==17675==    by 0x10BA4C: fill_tree (parser.c:131)
==17675==    by 0x10B712: parser (parser.c:36)
==17675==    by 0x109873: minishell_loop (minishell.c:89)
==17675==    by 0x109616: main (minishell.c:27)
==17675== 
==17675== LEAK SUMMARY:
==17675==    definitely lost: 41 bytes in 2 blocks
==17675==    indirectly lost: 0 bytes in 0 blocks
==17675==      possibly lost: 0 bytes in 0 blocks
==17675==    still reachable: 0 bytes in 0 blocks
==17675==         suppressed: 198,789 bytes in 214 blocks
==17675== 
==17675== Use --track-origins=yes to see where uninitialised values come from
==17675== For lists of detected and suppressed errors, rerun with: -s
==17675== ERROR SUMMARY: 6 errors from 6 contexts (suppressed: 0 from 0)
